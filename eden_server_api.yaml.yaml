swagger: "2.0"
info:
  description: "IGNORE THIS SECTION \n -------------------- \n This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Eden Server"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v2"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
tags:
- name: "product"
  description: "Shows information of a product: colorways and availability, for product page"
- name: "colorways"
  description: "Shows colorways, for the product listing page"
- name: "storeLocations"
  description: "Shows store locations"
schemes:
- "https"
- "http"
paths:
  /productPage/{productId}:
    get:
      tags:
      - "product"
      description: "Returns a single colorway of a product, based on productId and colorwayId"
      produces:
      - "json"
      parameters:
      - name: "productId"
        in: "path"
        required: true
        type: "string"
      - name: "long"
        in: "query"
        required: true
        type: "number"
      - name: "lat"
        in: "query"
        required: true
        type: "number"
      - name: "distance"
        in: "query"
        required: true
        type: "number"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ProductPageData"
        "404":
          description: "Not found"
  
  /colorways/all:
    get:
      tags:
      - "colorways"
      description: "Returns all colorways of all products"
      produces:
      - "json"
      parameters:
      - name: "colors"
        in: "query"
        type: "array"
        items:
          type: "number"
      - name : "types"
        in: "query"
        type: "number"

      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Colorway"
        "404":
          description: "Not found"
  
  /colorways/filter:
    get:
      tags:
      - "colorways"
      description: "Returns colorways matching the filter conditions"
      produces:
      - "json"
      parameters:
      - name : "colors"
        in: "query"
        type: "array"
        items:
          type: "number"
      - name : "types"
        in: "query"
        type: "array"
        items:
          type: "number"
      - name : "genders"
        in: "query"
        type: "array"
        items:
          type: "number"
      - name : "brands"
        in: "query"
        type: "array"
        items:
          type: "number"
      - name : "sort"
        in: "query"
        required: true
        type: "number"
      - name : "page"
        in: "query"
        required: true
        type: "number"
      - name : "numItems"
        in: "query"
        required: true
        type: "number"

      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Colorway"
        "404":
          description: "Not found"
  
  /storeLocations:
    get:
      tags:
      - "storeLocations"
      description: "Returns all store locations"
      produces:
      - "json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StoreLocation"
        "404":
          description: "Not found"

  /storeLocations/filter:
    get:
      tags:
      - "storeLocations"
      description: "Returns store locations matching the filter conditions"
      produces:
      - "json"
      parameters:
      - name : "lat"
        in: "query"
        type: "number"
      - name : "long"
        in: "query"
        type: "number"
      - name : "distance"
        in: "query"
        type: "number"
      - name : "stores"
        in: "query"
        type: "array"
        items:
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/StoreLocation"
        "404":
          description: "Not found"

definitions:
  ProductPageData:
    type: "object"
    properties:
      shoe:
        $ref: "#/definitions/Product"
      stores:
        $ref: "#/definitions/Store"
  Product:
    type: "object"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
      colorways:
        type: "array"
        items:
          type: "string"
          description: "colorwayIds of the product"
      description:
        type: "string"
      brand:
        type: "number"
      type:
        type: "number"
      gender:
        type: "number"
  Store:
    type: "object"
    properties:
      _id:
        type: "string"
      name:
        type: "string"
      storeLocations:
        type: "array"
        items:
          type: "string"
          description: "store location ids of the store"
      logoThumbnailUrl:
        type: "string"
      websiteUrl:
        type: "string"
  Colorway:
    type: "object"
    properties:
      _id:
        type: "string"
      colorwayName:
        type: "string"
        description: "Name of the colorway"
      name:
        type: "string"
        description: "Name of the product"
      brand:
        type: "number"
      type:
        type: "number"
      gender:
        type: "number"
      product:
        type: "string"
        description: "product id"
      colors:
        type: "array"
        items:
          type: "number"
      pictures:
        type: "array"
        items:
          type: "string"
      thumbnailUrl:
        type: "string"
  StoreLocation:
    type: "object"
    properties:
      _id:
        type: "string"
      address:
        type: "string"
      store:
        type: "string"
      coordinates:
        $ref: "#/definitions/Coordinates"
  Coordinates:
    type: "object"
    properties:
      type:
        type: "string"
      coordinates:
        type: "array"
        items:
          type: "number"
